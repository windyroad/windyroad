version: 2
jobs:
  dependencies:
    docker:
      - image: circleci/node:9
    steps:
      - checkout

      - restore_cache:
          keys:
          - dependencies-{{ checksum "package.json" }}
          - dependencies-
      - run:
          command: |
            npm install
            
      - save_cache:
          paths:
            - node_modules
          key: dependencies-{{ checksum "package.json" }}
      - persist_to_workspace:
          root: .
          paths:
            - '*'
        
  build:
    docker:
      - image: circleci/node:9
    steps:
      - attach_workspace:
          at: .
      - run:
          command: |
            npm run build
      - persist_to_workspace:
          root: .
          paths:
            - '*'
          

  test-headless:
    docker:
      - image: circleci/node:9-browsers
    steps:
      - attach_workspace:
          at: .
      - run: |
          npm run test:headless:prebuilt
      - store_test_results:
          path: ./target/reports/junit
      - store_artifacts:
          path: ./target/errorShots


  prerelease:
    docker:
      - image: circleci/node:9
    steps:
      - attach_workspace:
          at: .
      - run: |
          npm run package
          npm run prerelease -- ./target/releaseVersion.txt ./target/artifactUrl.txt
      - persist_to_workspace:
          root: .
          paths:
            - ./target/releaseVersion.txt
            - ./target/artifactUrl.txt
      - store_artifacts:
          path: ./target/
      - store_artifacts:
          path: package-lock.json

  stg-deploy:
    docker:
      - image: circleci/node:9
    steps:
      - attach_workspace:
          at: .
      - add_ssh_keys:
          fingerprints:
            - "8c:a5:d5:3a:2c:f3:f3:be:fb:05:c8:e3:3d:bc:68:c0"
      - run: |
          ssh-keyscan s25627.gridserver.com >> ~/.ssh/known_hosts
          cat ./target/releaseVersion.txt
          cat ./target/artifactUrl.txt
          npm run deploy -- stg.windyroad.org `cat ./target/releaseVersion.txt` `cat ./target/artifactUrl.txt`
          curl -X POST "https://api.cloudflare.com/client/v4/zones/49f90854f8a0df6112770ba9dcfd4cf7/purge_cache" -H "X-Auth-Email: tom@windyroad.org" -H "X-Auth-Key: $CF_AUTH_KEY" -H "Content-Type: application/json" --data '{"purge_everything":true}'

  prod-deploy:
    docker:
      - image: circleci/node:9
    steps:
      - attach_workspace:
          at: .
      - add_ssh_keys:
          fingerprints:
            - "8c:a5:d5:3a:2c:f3:f3:be:fb:05:c8:e3:3d:bc:68:c0"
      - run: |
          ssh-keyscan s25627.gridserver.com >> ~/.ssh/known_hosts
          cat ./target/releaseVersion.txt
          cat ./target/artifactUrl.txt
          npm run deploy -- windyroad.com.au `cat ./target/releaseVersion.txt` `cat ./target/artifactUrl.txt`
          curl -X POST "https://api.cloudflare.com/client/v4/zones/eb9b56f3ea8fc63280e7fc53013ec674/purge_cache" -H "X-Auth-Email: tom@windyroad.org" -H "X-Auth-Key: $CF_AUTH_KEY" -H "Content-Type: application/json" --data '{"purge_everything":true}'

workflows:
  version: 2

  ci:
    jobs:
      - dependencies
      - build:
          requires:
            - dependencies
      - test-headless:
          requires:
            - build
      - prerelease:
          requires:
            - build
            - test-headless
      - stg-deploy:
          requires:
            - prerelease

      - approve-prod-deploy:
          type: approval
          requires:
            - stg-deploy

      - prod-deploy:
          requires:
            - approve-prod-deploy